// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class userAdded extends ethereum.Event {
  get params(): userAdded__Params {
    return new userAdded__Params(this);
  }
}

export class userAdded__Params {
  _event: userAdded;

  constructor(event: userAdded) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class fileUploaded extends ethereum.Event {
  get params(): fileUploaded__Params {
    return new fileUploaded__Params(this);
  }
}

export class fileUploaded__Params {
  _event: fileUploaded;

  constructor(event: fileUploaded) {
    this._event = event;
  }

  get cid(): string {
    return this._event.parameters[0].value.toString();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fileType(): string {
    return this._event.parameters[2].value.toString();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }

  get createdAt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get updatedAt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class UserFunctions extends ethereum.SmartContract {
  static bind(address: Address): UserFunctions {
    return new UserFunctions("UserFunctions", address);
  }

  CheckUserExists(user: Address): boolean {
    let result = super.call(
      "CheckUserExists",
      "CheckUserExists(address):(bool)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBoolean();
  }

  try_CheckUserExists(user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "CheckUserExists",
      "CheckUserExists(address):(bool)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddUserCall extends ethereum.Call {
  get inputs(): AddUserCall__Inputs {
    return new AddUserCall__Inputs(this);
  }

  get outputs(): AddUserCall__Outputs {
    return new AddUserCall__Outputs(this);
  }
}

export class AddUserCall__Inputs {
  _call: AddUserCall;

  constructor(call: AddUserCall) {
    this._call = call;
  }
}

export class AddUserCall__Outputs {
  _call: AddUserCall;

  constructor(call: AddUserCall) {
    this._call = call;
  }
}
